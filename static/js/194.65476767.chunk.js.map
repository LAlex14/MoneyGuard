{"version":3,"file":"static/js/194.65476767.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/HomePage/homePage.module.css?d1eb","redux/transactions/selectors.js","components/Modals/AddModal/AddModal.js","pages/HomePage/HomePage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"homePage_container__KQUO7\",\"title\":\"homePage_title__FzVmN\"};","export const selectorTransactions = state => state.transactions.transactions;\nexport const selectError = state => state.transactions.error;\nexport const selectIsLoading = state => state.transactions.isLoading;\nexport const selectCategories = state => state.transactions.categories;\n","import { ErrorMessage, Formik, Field } from 'formik';\nimport { object, string, number } from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react'; // Import useEffect from 'react'\nimport {\n  addTransaction,\n  getCategories,\n} from '../../../redux/transactions/operations';\nimport { RiCalendar2Fill } from 'react-icons/ri';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { forwardRef } from 'react';\nimport { selectCategories } from '../../../redux/transactions/selectors';\n\nconst addSchema = object({\n  value: number().positive().required('Amount is required'),\n  comment: string()\n    .max(30, 'Maximum must be 30 characters')\n    .required('Please fill in comment'),\n  category: string().required('Category is required'),\n});\n\nconst initialValues = {\n  type: 'EXPENCE',\n  category: '',\n  value: '',\n  date: new Date(),\n  comment: '',\n};\n\nconst CustomInput = forwardRef(({ value, onClick }, ref) => (\n  <>\n    <input type=\"text\" value={value} onClick={onClick} ref={ref} readOnly />\n    <RiCalendar2Fill onClick={onClick} />\n  </>\n));\n\nexport default function AddTransaction() {\n  const dispatch = useDispatch();\n  const categories = useSelector(selectCategories);\n\n  useEffect(() => {\n    dispatch(getCategories());\n  }, [dispatch]);\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(addTransaction(values));\n    resetForm();\n  };\n  console.log(categories);\n  return (\n    <>\n      <title>Add transaction</title>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={addSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ values, setFieldValue }) => (\n          <form autoComplete=\"off\">\n            <label>\n              <Field name=\"type\" type=\"hidden\" />\n            </label>\n            <label>\n              <Field name=\"category\" as=\"select\">\n                <option value=\"\">Select Category</option>\n                {/* Corrected categories mapping */}\n                {categories &&\n                  categories.map(category => (\n                    <option key={category.id} value={category.id}>\n                      {category.name}\n                    </option>\n                  ))}\n              </Field>\n              <ErrorMessage name=\"category\" component=\"div\" />\n            </label>\n            <label>\n              <Field name=\"value\" type=\"number\" placeholder=\"Amount\" />\n              <ErrorMessage name=\"value\" component=\"div\" />\n            </label>\n            <label>\n              <Field name=\"date\">\n                {({ field, form, meta }) => (\n                  <DatePicker\n                    {...field}\n                    dateFormat=\"dd.MM.yyyy\"\n                    maxDate={new Date()}\n                    selected={field.value}\n                    onChange={date => setFieldValue('date', date)}\n                    shouldCloseOnSelect={true}\n                    customInput={<CustomInput value={field.value} />}\n                  />\n                )}\n              </Field>\n            </label>\n            <label>\n              <Field name=\"comment\" as=\"textarea\" placeholder=\"Comment\" />\n              <ErrorMessage name=\"comment\" component=\"div\" />\n            </label>\n            <button type=\"submit\">Add</button>\n          </form>\n        )}\n      </Formik>\n    </>\n  );\n}\n","import React from 'react';\nimport css from './homePage.module.css';\nimport AddModal from '../../components/Modals/AddModal/AddModal';\n\nexport default function Home() {\n  return (\n    <div className={css.container}>\n      <h1>Home page</h1>\n      <AddModal />\n    </div>\n  );\n}\n"],"names":["selectCategories","state","transactions","categories","addSchema","object","value","number","positive","required","comment","string","max","category","initialValues","type","date","Date","CustomInput","forwardRef","_ref","ref","onClick","_jsxs","_Fragment","children","_jsx","readOnly","RiCalendar2Fill","AddTransaction","dispatch","useDispatch","useSelector","useEffect","getCategories","console","log","Formik","validationSchema","onSubmit","values","_ref2","resetForm","addTransaction","_ref3","setFieldValue","autoComplete","Field","name","as","map","id","ErrorMessage","component","placeholder","_ref4","field","form","meta","DatePicker","_objectSpread","dateFormat","maxDate","selected","onChange","shouldCloseOnSelect","customInput","Home","className","css","AddModal"],"sourceRoot":""}